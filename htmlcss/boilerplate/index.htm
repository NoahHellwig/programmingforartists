<!DOCTYPE html>
<html> <!-- här börjar html -->
  <head>  
    <title> Jag är titeln på en enkel sida </title>
    <script src="https://d3js.org/d3-array.v1.min.js"></script>
<script src="https://d3js.org/d3-path.v1.min.js"></script>
<script src="https://d3js.org/d3-chord.v1.min.js"></script>
<script>

var chord = d3.chord();
var matrix = [
  [11975,  5871, 8916, 2868],
  [ 1951, 10048, 2060, 6171],
  [ 8010, 16145, 8090, 8045],
  [ 1013,   990,  940, 6907]
];
var ribbon = d3.ribbon();

ribbon({
  source: {startAngle: 0.7524114, endAngle: 1.1212972, radius: 240},
  target: {startAngle: 1.8617078, endAngle: 1.9842927, radius: 240}
}); 

chart = {
  const svg = d3.select(DOM.svg(width, height))
      .attr("viewBox", [-width / 2, -height / 2, width, height])
      .attr("font-size", 10)
      .attr("font-family", "sans-serif");

  const chords = chord(data);

  const group = svg.append("g")
    .selectAll("g")
    .data(chords.groups)
    .enter().append("g");

  group.append("path")
      .attr("fill", d => color(d.index))
      .attr("stroke", d => d3.rgb(color(d.index)).darker())
      .attr("d", arc);

  const groupTick = group.append("g")
    .selectAll("g")
    .data(d => groupTicks(d, 1e3))
    .enter().append("g")
      .attr("transform", d => `rotate(${d.angle * 180 / Math.PI - 90}) translate(${outerRadius},0)`);

  groupTick.append("line")
      .attr("stroke", "#000")
      .attr("x2", 6);

  groupTick
    .filter(d => d.value % 5e3 === 0)
    .append("text")
      .attr("x", 8)
      .attr("dy", ".35em")
      .attr("transform", d => d.angle > Math.PI ? "rotate(180) translate(-16)" : null)
      .attr("text-anchor", d => d.angle > Math.PI ? "end" : null)
      .text(d => formatValue(d.value));

  svg.append("g")
      .attr("fill-opacity", 0.67)
    .selectAll("path")
    .data(chords)
    .enter().append("path")
      .attr("d", ribbon)
      .attr("fill", d => color(d.target.index))
      .attr("stroke", d => d3.rgb(color(d.target.index)).darker());

  return svg.node();
}

function groupTicks(d, step) {
  const k = (d.endAngle - d.startAngle) / d.value;
  return d3.range(0, d.value, step).map(value => {
    return {value: value, angle: value * k + d.startAngle};
  });
}

formatValue = d3.formatPrefix(",.0", 1e3)

chord = d3.chord()
    .padAngle(0.05)
    .sortSubgroups(d3.descending)

arc = d3.arc()
    .innerRadius(innerRadius)
    .outerRadius(outerRadius)

ribbon = d3.ribbon()
    .radius(innerRadius)

color = d3.scaleOrdinal()
    .domain(d3.range(4))
    .range(["#000000", "#FFDD89", "#957244", "#F26223"])

outerRadius = Math.min(width, height) * 0.5 - 30

innerRadius = outerRadius - 20

height = Math.min(640, width)

d3 = require("d3@5")
</script>
  </head>
  <body>  <!-- det som sidan visar -->

  </body>
  <!-- här skall vi länka in vårt javascript -->
</html> 
